{
  "stats": {
    "suites": 5,
    "tests": 12,
    "passes": 12,
    "pending": 0,
    "failures": 0,
    "start": "2022-05-22T13:35:23.105Z",
    "end": "2022-05-22T13:35:31.616Z",
    "duration": 8511,
    "testsRegistered": 12,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d489eeb8-f7c2-42b3-9f2f-2df11e5d882a",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ca3e675e-a783-4bf7-b8ed-3a779780fff1",
          "title": "Creation blogposts with valid data",
          "fullFile": "D:\\repositories\\api-tests\\test\\posts.js",
          "file": "\\test\\posts.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Creation blogposts with valid data\"",
              "fullTitle": "Creation blogposts with valid data \"before all\" hook in \"Creation blogposts with valid data\"",
              "timedOut": false,
              "duration": 635,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "bbc535b5-dec0-4e6b-9e14-7bcfb4bf0c44",
              "parentUUID": "ca3e675e-a783-4bf7-b8ed-3a779780fff1",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create a post",
              "fullTitle": "Creation blogposts with valid data Create a post",
              "timedOut": false,
              "duration": 599,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "ce0f524c-2179-4ed2-8f12-1c61e7582681",
              "parentUUID": "ca3e675e-a783-4bf7-b8ed-3a779780fff1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get post undefined",
              "fullTitle": "Creation blogposts with valid data Get post undefined",
              "timedOut": false,
              "duration": 608,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "6cae6b69-033b-44f9-8cb3-c92a8a5fb203",
              "parentUUID": "ca3e675e-a783-4bf7-b8ed-3a779780fff1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ce0f524c-2179-4ed2-8f12-1c61e7582681",
            "6cae6b69-033b-44f9-8cb3-c92a8a5fb203"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1207,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "965d84a6-7b68-4f9f-addc-8c9feadf2d4e",
          "title": "Negative tests. Creation blogposts",
          "fullFile": "D:\\repositories\\api-tests\\test\\posts.js",
          "file": "\\test\\posts.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Negative tests. Creation blogposts\"",
              "fullTitle": "Negative tests. Creation blogposts \"before all\" hook in \"Negative tests. Creation blogposts\"",
              "timedOut": false,
              "duration": 611,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "974202d1-e2c9-47e6-af13-7a9dd35d20b8",
              "parentUUID": "965d84a6-7b68-4f9f-addc-8c9feadf2d4e",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "401. Inability to create post if user not authorized",
              "fullTitle": "Negative tests. Creation blogposts 401. Inability to create post if user not authorized",
              "timedOut": false,
              "duration": 615,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "ffdeb008-7b82-4ab4-b349-a30fdb57dbec",
              "parentUUID": "965d84a6-7b68-4f9f-addc-8c9feadf2d4e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "422. Inability to create post due to sending lack of data",
              "fullTitle": "Negative tests. Creation blogposts 422. Inability to create post due to sending lack of data",
              "timedOut": false,
              "duration": 609,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "684a62ea-5da8-49da-85a3-5d35e1e0338c",
              "parentUUID": "965d84a6-7b68-4f9f-addc-8c9feadf2d4e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ffdeb008-7b82-4ab4-b349-a30fdb57dbec",
            "684a62ea-5da8-49da-85a3-5d35e1e0338c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1224,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "10b65345-1173-4e2a-9f36-60acb64b9fef",
          "title": "Positive tests for CRUD users",
          "fullFile": "D:\\repositories\\api-tests\\test\\usersCRUD.js",
          "file": "\\test\\usersCRUD.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "1. Create user account with valid data",
              "fullTitle": "Positive tests for CRUD users 1. Create user account with valid data",
              "timedOut": false,
              "duration": 614,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return _supertest[\"default\"].post('/users').set('Authorization', \"Bearer \".concat(TOKEN)).send(USER_VALID_DATA).then(function (res) {\n  (0, _chai.expect)(res.body.code).to.deep.eq(201);\n  (0, _chai.expect)(res.body.data).to.deep.include(USER_VALID_DATA);\n  userId = res.body.data.id;\n  console.log(userId);\n});",
              "err": {},
              "uuid": "99858f79-259e-4a0a-870b-d73051a83eb2",
              "parentUUID": "10b65345-1173-4e2a-9f36-60acb64b9fef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "2. Get undefined user and verify that it has id=undefined",
              "fullTitle": "Positive tests for CRUD users 2. Get undefined user and verify that it has id=undefined",
              "timedOut": false,
              "duration": 609,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return _supertest[\"default\"].get(\"/users/\".concat(userId, \"?access-token=\").concat(TOKEN)).then(function (res) {\n  (0, _chai.expect)(res.body.data.id).to.be.eq(userId);\n  console.log(userId);\n});",
              "err": {},
              "uuid": "f6d35ade-72bd-483b-9600-520d1e67dfe1",
              "parentUUID": "10b65345-1173-4e2a-9f36-60acb64b9fef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "3. Update user name and satus attributes of undefined user ",
              "fullTitle": "Positive tests for CRUD users 3. Update user name and satus attributes of undefined user ",
              "timedOut": false,
              "duration": 618,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return _supertest[\"default\"].put(\"/users/\".concat(userId)).set('Authorization', \"Bearer \".concat(TOKEN)).send(USER_NEW_DATA).then(function (res) {\n  (0, _chai.expect)(res.body.code).to.deep.eq(200);\n  (0, _chai.expect)(res.body.data.name).to.deep.eq(USER_NEW_DATA.name);\n  (0, _chai.expect)(res.body.data.status).to.deep.eq(USER_NEW_DATA.status);\n  console.log(userId);\n});",
              "err": {},
              "uuid": "71b46e72-19ba-4386-9525-9a662636c697",
              "parentUUID": "10b65345-1173-4e2a-9f36-60acb64b9fef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "4. Delete user and verify that his data returnes as null",
              "fullTitle": "Positive tests for CRUD users 4. Delete user and verify that his data returnes as null",
              "timedOut": false,
              "duration": 538,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return _supertest[\"default\"][\"delete\"](\"/users/\".concat(userId)).set('Authorization', \"Bearer \".concat(TOKEN)).then(function (res) {\n  (0, _chai.expect)(res.body.data).to.deep.eq(null);\n  console.log(userId);\n});",
              "err": {},
              "uuid": "6e36f548-876c-42d0-ae63-f733b0af73a4",
              "parentUUID": "10b65345-1173-4e2a-9f36-60acb64b9fef",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "99858f79-259e-4a0a-870b-d73051a83eb2",
            "f6d35ade-72bd-483b-9600-520d1e67dfe1",
            "71b46e72-19ba-4386-9525-9a662636c697",
            "6e36f548-876c-42d0-ae63-f733b0af73a4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2379,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "b332dd72-3809-48a8-9bca-271dd046fbc6",
          "title": "Negative test for create users",
          "fullFile": "D:\\repositories\\api-tests\\test\\usersCRUD.js",
          "file": "\\test\\usersCRUD.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "4. Inability to create user account with empty user data",
              "fullTitle": "Negative test for create users 4. Inability to create user account with empty user data",
              "timedOut": false,
              "duration": 579,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return _supertest[\"default\"].post('/users').set('Authorization', \"Bearer \".concat(TOKEN)).send(USER_EMPTY_DATA).then(function (res) {\n  (0, _chai.expect)(res.body.code).to.deep.eq(422);\n  res.body.data.forEach(function (data) {\n    (0, _chai.expect)(data.message).to.eq(\"can't be blank\");\n  });\n});",
              "err": {},
              "uuid": "dfa6a9b6-8aab-4714-b78e-fefa027e3e95",
              "parentUUID": "b332dd72-3809-48a8-9bca-271dd046fbc6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dfa6a9b6-8aab-4714-b78e-fefa027e3e95"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 579,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "7cbe683d-6eee-44a7-ac3b-7342d2cc20b5",
          "title": "List of User Accounts",
          "fullFile": "D:\\repositories\\api-tests\\test\\usersList.js",
          "file": "\\test\\usersList.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "1. Get list of users and verify that it is not empty (using \"done\" callback)",
              "fullTitle": "List of User Accounts 1. Get list of users and verify that it is not empty (using \"done\" callback)",
              "timedOut": false,
              "duration": 612,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_supertest[\"default\"].get(\"users?access-token=\".concat(TOKEN)).end(function (err, res) {\n  console.log(\"error: \", err);\n  (0, _chai.expect)(res.body.data).to.not.be.empty;\n  done();\n});",
              "err": {},
              "uuid": "e409a711-6a85-47d2-82cc-176e0acbf7fe",
              "parentUUID": "7cbe683d-6eee-44a7-ac3b-7342d2cc20b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "2. Get list of users and verify that it is not empty (using promise)",
              "fullTitle": "List of User Accounts 2. Get list of users and verify that it is not empty (using promise)",
              "timedOut": false,
              "duration": 612,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return _supertest[\"default\"].get(\"/users?access-token=\".concat(TOKEN)).then(function (res) {\n  (0, _chai.expect)(res.body.data).to.not.be.empty;\n});",
              "err": {},
              "uuid": "133084fd-b970-439b-8714-707f44ef0efc",
              "parentUUID": "7cbe683d-6eee-44a7-ac3b-7342d2cc20b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "3. Get list of users with the following filter params: female, active, from page 5",
              "fullTitle": "List of User Accounts 3. Get list of users with the following filter params: female, active, from page 5",
              "timedOut": false,
              "duration": 614,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var URL = \"/users?access-token=\".concat(TOKEN, \"&gender=female&status=active&page=5\");\nreturn _supertest[\"default\"].get(URL).then(function (res) {\n  res.body.data.forEach(function (data) {\n    (0, _chai.expect)(data.gender).to.eq('female');\n    (0, _chai.expect)(data.status).to.eq('active');\n  });\n});",
              "err": {},
              "uuid": "296aeb43-872d-44f5-84cc-b0096e56e9c7",
              "parentUUID": "7cbe683d-6eee-44a7-ac3b-7342d2cc20b5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e409a711-6a85-47d2-82cc-176e0acbf7fe",
            "133084fd-b970-439b-8714-707f44ef0efc",
            "296aeb43-872d-44f5-84cc-b0096e56e9c7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1838,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 5000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}